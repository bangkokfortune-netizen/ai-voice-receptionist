# ü§ñ AI Voice Receptionist

‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ AI ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ Fastify + Twilio + OpenAI Realtime API ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö real-time ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢

## üéØ Features

‚úÖ **Real-time Voice Conversation** - ‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö real-time  
‚úÖ **Thai Language Support** - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏Ñ‡∏•‡πà‡∏ß  
‚úÖ **Server-side VAD** - ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥  
‚úÖ **Production Ready** - ‡∏û‡∏£‡πâ‡∏≠‡∏° deploy ‡∏ö‡∏ô Railway  
‚úÖ **Session Management** - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ session ‡πÅ‡∏•‡∏∞ logging ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô  
‚úÖ **Error Handling** - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡πÅ‡∏•‡∏∞ edge cases

---

## üì¶ Requirements

- **Node.js** >= 18.0.0
- **npm** >= 9.0.0
- **OpenAI API Key** (with GPT-4 Realtime API access)
- **Twilio Account** (with phone number)
- **Railway Account** (for deployment)

---

## üöÄ Installation

### 1. Clone ‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies

```bash
# Clone repository
git clone <your-repo-url>
cd ai-voice-receptionist

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dependencies
npm install
```

### 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå .env

```bash
cp .env.example .env
```

‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå `.env`:

```env
OPENAI_API_KEY=sk-proj-your-actual-key-here
PORT=5050
SYSTEM_PROMPT=‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó XYZ...
```

### 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö local

```bash
npm start
```

Server ‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà `http://localhost:5050`

---

## üîß ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏°

### ‚úÖ 1. Register @fastify/formbody Plugin

**‡∏õ‡∏±‡∏ç‡∏´‡∏≤:** Twilio ‡∏™‡πà‡∏á POST request ‡πÄ‡∏õ‡πá‡∏ô `application/x-www-form-urlencoded` ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£ register plugin

**‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:**
```javascript
const formbody = require('@fastify/formbody');

// ‡∏ï‡πâ‡∏≠‡∏á register ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á routes
fastify.register(formbody);
fastify.register(websocket);
```

### ‚úÖ 2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç TwiML Response

**‡∏õ‡∏±‡∏ç‡∏´‡∏≤:** TwiML ‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡πÑ‡∏°‡πà‡∏°‡∏µ greeting ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö HTTPS/WSS

**‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:**
```javascript
const protocol = request.headers['x-forwarded-proto'] === 'https' ? 'wss' : 'ws';
const twiml = `<?xml version="1.0" encoding="UTF-8"?>
<Response>
    <Say voice="Polly.Aditi" language="th-TH">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö AI</Say>
    <Connect>
        <Stream url="${protocol}://${host}/media-stream">
            <Parameter name="callSid" value="${callSid}" />
        </Stream>
    </Connect>
</Response>`;
```

### ‚úÖ 3. ‡πÄ‡∏û‡∏¥‡πà‡∏° Error Handling

**‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:**
- Try-catch ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å webhook ‡πÅ‡∏•‡∏∞ WebSocket handlers
- Error TwiML response ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
- Graceful shutdown ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î connections
- Logging ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏ó‡∏∏‡∏Å events

### ‚úÖ 4. Session Management

**‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:**
```javascript
const activeSessions = new Map();

// ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• session
activeSessions.set(sessionId, {
  streamSid,
  callSid,
  openaiWs,
  startTime: Date.now()
});
```

### ‚úÖ 5. ‡πÄ‡∏û‡∏¥‡πà‡∏° Endpoints

- `/health` - Health check ‡∏û‡∏£‡πâ‡∏≠‡∏° system metrics
- `/status` - ‡∏î‡∏π active sessions
- `/` - API documentation

### ‚úÖ 6. Production Configuration

```javascript
await fastify.listen({ 
  port: PORT, 
  host: '0.0.0.0' // ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç! Railway ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ 0.0.0.0
});
```

---

## üåê Deploy ‡∏ö‡∏ô Railway

### Step 1: Push code ‡πÑ‡∏õ‡∏¢‡∏±‡∏á GitHub

```bash
git init
git add .
git commit -m "Initial commit: AI Voice Receptionist"
git branch -M main
git remote add origin <your-github-repo>
git push -u origin main
```

### Step 2: Deploy ‡∏ö‡∏ô Railway

1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà [Railway.app](https://railway.app)
2. ‡∏Ñ‡∏•‡∏¥‡∏Å **New Project**
3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å **Deploy from GitHub repo**
4. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å repository ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
5. Railway ‡∏à‡∏∞ auto-detect Node.js ‡πÅ‡∏•‡∏∞ deploy

### Step 3: ‡πÄ‡∏û‡∏¥‡πà‡∏° Environment Variables

‡πÉ‡∏ô Railway Dashboard:
1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà project ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà tab **Variables**
3. ‡πÄ‡∏û‡∏¥‡πà‡∏° variables:

```
OPENAI_API_KEY=sk-proj-your-key
SYSTEM_PROMPT=‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö...
```

### Step 4: ‡∏î‡∏π Deployment URL

Railway ‡∏à‡∏∞‡πÉ‡∏´‡πâ URL ‡πÄ‡∏ä‡πà‡∏ô: `https://your-app.railway.app`

---

## üìû Configure Twilio

### Step 1: ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Twilio Console

1. ‡πÄ‡∏Ç‡πâ‡∏≤ [Twilio Console](https://console.twilio.com)
2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà **Phone Numbers** ‚Üí **Manage** ‚Üí **Active Numbers**
3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ

### Step 2: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Voice Webhook

```
A CALL COMES IN:
  Webhook: https://your-app.railway.app/voice-webhook
  HTTP: POST
  
PRIMARY HANDLER FAILS:
  Webhook: https://your-app.railway.app/voice-webhook
  HTTP: POST
```

### Step 3: Save Configuration

‡∏Ñ‡∏•‡∏¥‡∏Å **Save** ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤

---

## üß™ Testing

### 1. Test Health Endpoint

```bash
curl https://your-app.railway.app/health
```

Response:
```json
{
  "status": "ok",
  "timestamp": "2024-01-XX...",
  "activeSessions": 0,
  "memory": {...},
  "environment": {...}
}
```

### 2. Test Voice Call

1. ‡πÇ‡∏ó‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå Twilio ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
2. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤ "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö AI"
3. ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏Å‡∏±‡∏ö AI ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!

### 3. Monitor Logs

‡πÉ‡∏ô Railway Dashboard:
- ‡πÑ‡∏õ‡∏ó‡∏µ‡πà **Deployments** tab
- ‡∏Ñ‡∏•‡∏¥‡∏Å **View Logs**
- ‡∏î‡∏π real-time logs:

```
üìû Incoming call from Twilio
üîå WebSocket connection established
‚úÖ Connected to OpenAI Realtime API
üë§ User said: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö"
ü§ñ AI said: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö..."
```

---

## üé® Customization

### ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô AI Voice

‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô `index.js`:
```javascript
voice: 'alloy' // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô: alloy, echo, fable, onyx, nova, shimmer
```

### ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô System Prompt

‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô `.env`:
```env
SYSTEM_PROMPT=‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà...
```

‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡πÉ‡∏ô code:
```javascript
const SYSTEM_PROMPT = process.env.SYSTEM_PROMPT || 'Your custom prompt here';
```

### ‡∏õ‡∏£‡∏±‡∏ö Voice Detection

‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô `index.js`:
```javascript
turn_detection: { 
  type: 'server_vad',
  threshold: 0.5,        // ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á (0.0-1.0)
  prefix_padding_ms: 300, // ‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏û‡∏π‡∏î
  silence_duration_ms: 500 // ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏ü‡∏±‡∏á
}
```

---

## üìä API Endpoints

| Endpoint | Method | Description |
|----------|--------|-------------|
| `/` | GET | API documentation |
| `/voice-webhook` | POST | Twilio voice webhook (TwiML) |
| `/media-stream` | WebSocket | Twilio media stream |
| `/health` | GET | Health check + metrics |
| `/status` | GET | Active sessions status |

---

## üîç Troubleshooting

### ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: "Unsupported Media Type"

**‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:** ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ register `@fastify/formbody`

**‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:** ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ `fastify.register(formbody)` ‡∏Å‡πà‡∏≠‡∏ô routes

---

### ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: WebSocket ‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠

**‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏:** URL ‡πÉ‡∏ä‡πâ `ws://` ‡πÅ‡∏ó‡∏ô `wss://` ‡∏ö‡∏ô production

**‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:** ‡πÉ‡∏ä‡πâ code ‡∏ó‡∏µ‡πà auto-detect protocol:
```javascript
const protocol = request.headers['x-forwarded-proto'] === 'https' ? 'wss' : 'ws';
```

---

### ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: OpenAI ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö

**‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:**
1. OPENAI_API_KEY ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
2. ‡∏°‡∏µ access to GPT-4 Realtime API
3. ‡∏î‡∏π logs ‡∏ß‡πà‡∏≤‡∏°‡∏µ error ‡∏≠‡∏∞‡πÑ‡∏£

---

## üìù TwiML Response Examples

### ‚úÖ Success Response

```xml
<?xml version="1.0" encoding="UTF-8"?>
<Response>
    <Say voice="Polly.Aditi" language="th-TH">
        ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö AI
    </Say>
    <Connect>
        <Stream url="wss://your-domain.railway.app/media-stream">
            <Parameter name="callSid" value="CA123..." />
        </Stream>
    </Connect>
</Response>
```

### ‚ùå Error Response

```xml
<?xml version="1.0" encoding="UTF-8"?>
<Response>
    <Say voice="Polly.Aditi" language="th-TH">
        ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    </Say>
    <Hangup/>
</Response>
```

---

## üõ†Ô∏è Development Tips

### Run with auto-reload

```bash
npm run dev
```

### View logs in real-time

```bash
npm start | grep "üìû\|ü§ñ\|üë§"
```

### Test Twilio webhook locally

‡πÉ‡∏ä‡πâ [ngrok](https://ngrok.com):
```bash
ngrok http 5050
```

‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ä‡πâ ngrok URL ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Twilio webhook

---

## üìö Additional Resources

- [Twilio Voice Documentation](https://www.twilio.com/docs/voice)
- [OpenAI Realtime API](https://platform.openai.com/docs/api-reference/realtime)
- [Fastify Documentation](https://www.fastify.io/docs/latest/)
- [Railway Documentation](https://docs.railway.app/)

---

## ü§ù Support

‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤:
1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö logs ‡πÉ‡∏ô Railway Dashboard
2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö `/health` endpoint
3. ‡∏î‡∏π active sessions ‡∏ó‡∏µ‡πà `/status`

---

## üìÑ License

MIT

---

## üéâ Success Indicators

‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô:

```
‚úÖ Connected to OpenAI Realtime API
üìû Stream started - StreamSid: MZ123...
üë§ User said: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö"
ü§ñ AI said: "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö..."
```

**‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ AI Voice Receptionist ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì! üöÄ**
